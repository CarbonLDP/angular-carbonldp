{"version":3,"sources":["boot.ts"],"names":[],"mappings":"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","file":"boot.js","sourcesContent":["import {provide, Provider, Injector, OpaqueToken} from \"angular2/core\";\n\nimport * as Cookies from \"js-cookie\";\n\nimport Carbon from \"carbonldp/Carbon\";\nimport * as App from \"carbonldp/App\";\nimport Context from \"carbonldp/Context\";\nimport * as Errors from \"carbonldp/Errors\";\nimport * as Token from \"carbonldp/Auth/Token\";\n\nexport const AUTH_COOKIE:string = \"carbon-token\";\n\nlet carbon:Carbon = null;\n\n/**\n * Function that holds the app's injector. To initialize it, call it passing appRef.injector as a parameter.\n * After that, you can import the function and execute it to receive the same injector.\n * @type {function(Injector=): Injector}\n */\nconst appInjectorFn:( injector?:Injector ) => Injector = ( ():( injector?:Injector ) => Injector => {\n\tlet appInjector:Injector;\n\treturn ( injector?:Injector ):Injector => {\n\t\tif( injector ) appInjector = injector;\n\t\treturn appInjector;\n\t};\n})();\n\nexport {\n\tappInjectorFn as appInjector\n};\n\nexport function inject( token:any ):any {\n\treturn appInjectorFn().get( token );\n}\n\nfunction authenticationCookieIsPresent():boolean {\n\treturn typeof Cookies.get( AUTH_COOKIE ) !== \"undefined\";\n}\n\nfunction authenticateWithCookie( context:Context ):Promise<any> {\n\tlet token:Token.Class;\n\ttry {\n\t\ttoken = Cookies.getJSON( AUTH_COOKIE );\n\t} catch( error ) {\n\t\treturn Promise.reject( error );\n\t}\n\treturn context.auth.authenticateUsing( \"TOKEN\", token );\n}\n\nexport interface ActiveContextFn {\n\t():Context;\n\tpromise?:Promise<void>;\n\tinitialize?:( carbon:Carbon, appSlug?:string ) => Promise<void>;\n\tisAppContext?:() => boolean;\n}\n\nconst activeContextFn:ActiveContextFn = ( ():ActiveContextFn => {\n\tlet _activeContext:Context = null;\n\tlet _isAppContext:boolean = false;\n\n\tlet activeContextFn:ActiveContextFn = ():Context => {\n\t\treturn _activeContext;\n\t};\n\tactiveContextFn.promise = Promise.resolve();\n\tactiveContextFn.initialize = ( configuredCarbon:Carbon = new Carbon(), appSlug:string = null ):Promise<void> => {\n\t\tcarbon = configuredCarbon;\n\n\t\tlet contextPromise:Promise<void> = null;\n\t\tif( appSlug === null ) {\n\t\t\t_activeContext = carbon;\n\n\t\t\tcontextPromise = activeContextFn.promise;\n\t\t} else {\n\t\t\t_isAppContext = true;\n\n\t\t\tcontextPromise = carbon.apps.getContext( appSlug ).then( ( context:Context ) => {\n\t\t\t\t_activeContext = context;\n\t\t\t}).catch( ( error ) => {\n\t\t\t\tconsole.error( \"Couldn't initialize carbon's app context\" );\n\t\t\t\tconsole.error( error );\n\t\t\t\treturn Promise.reject( error );\n\t\t\t});\n\t\t}\n\n\t\tactiveContextFn.promise = contextPromise.then( () => {\n\t\t\tif( authenticationCookieIsPresent() ) {\n\t\t\t\treturn authenticateWithCookie( _activeContext );\n\t\t\t}\n\t\t});\n\t\treturn activeContextFn.promise;\n\t};\n\tactiveContextFn.isAppContext = ():boolean => {\n\t\treturn _isAppContext;\n\t};\n\n\treturn activeContextFn;\n})();\n\nexport {\n\tactiveContextFn as activeContext\n};\n\nexport const ContextToken = new OpaqueToken( \"ContextToken\" );\n\nexport const CARBON_PROVIDERS:Provider[] = [\n\tprovide( Carbon, {\n\t\tuseFactory: ():Context => {\n\t\t\treturn carbon;\n\t\t},\n\t} ),\n\tprovide( ContextToken, {\n\t\tuseFactory: ():Context => {\n\t\t\treturn activeContextFn();\n\t\t},\n\t} ),\n\tprovide( App.Context, {\n\t\tuseFactory: ():App.Context => {\n\t\t\tif( ! activeContextFn.isAppContext() ) throw new Errors.IllegalStateError( \"The activeContext is not an App Context\" );\n\t\t\treturn <any>activeContextFn();\n\t\t},\n\t} ),\n];\n"],"sourceRoot":"/source/"}