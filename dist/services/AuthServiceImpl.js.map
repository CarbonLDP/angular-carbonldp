{"version":3,"sources":["services/AuthServiceImpl.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,qBAAiD,eAAe,CAAC,CAAA;AAEjE,IAAY,OAAO,WAAM,WAAW,CAAC,CAAA;AAErC,wBAAoB,mBAAmB,CAAC,CAAA;AAGxC,qBAA0C,WAAW,CAAC,CAAA;AAKtD;IAUC,yBAAqC,OAAe;QAVrD,iBAqCC;QA1BC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,mBAAY,EAAO,CAAC;QAChD,IAAI,CAAC,iBAAiB,GAAG,IAAI,mBAAY,EAAO,CAAC;QACjD,IAAI,CAAC,mBAAmB,GAAG,IAAI,mBAAY,EAAO,CAAC;QAEnD,IAAI,CAAC,eAAe,CAAC,SAAS,CAAE,UAAE,KAAS,IAAM,OAAA,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAE,KAAK,CAAE,EAArC,CAAqC,CAAE,CAAC;QACzF,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAE,UAAE,KAAS,IAAM,OAAA,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAE,KAAK,CAAE,EAArC,CAAqC,CAAE,CAAC;IAC3F,CAAC;IAZD,sBAAI,4CAAe;aAAnB,cAA0C,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAA,CAAC,CAAC;;;OAAA;;IACxE,sBAAI,6CAAgB;aAApB,cAA2C,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAA,CAAC,CAAC;;;OAAA;;IAC1E,sBAAI,+CAAkB;aAAtB,cAA6C,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAA,CAAC,CAAC;;;OAAA;;IAY9E,yCAAe,GAAf;QACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC5C,CAAC;IAED,+BAAK,GAAL,UAAO,QAAe,EAAE,QAAe,EAAE,UAAkB;QAA3D,iBAMC;QALA,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC,IAAI,CAAE,UAAE,WAAuB;YAC1F,EAAE,CAAA,CAAE,UAAW,CAAC;gBAAC,OAAO,CAAC,GAAG,CAAE,kBAAW,EAAE,WAAW,CAAE,CAAC;YACzD,KAAI,CAAC,eAAe,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;YAClC,MAAM,CAAC,WAAW,CAAC;QACpB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,gCAAM,GAAN;QACC,OAAO,CAAC,MAAM,CAAE,kBAAW,CAAE,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACxC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;IACpC,CAAC;IArCF;QAAC,iBAAU,EAAE;mBAWE,aAAM,CAAE,mBAAY,CAAE;;uBAXxB;IAsCb,sBAAC;;AAAD,CArCA,AAqCC,IAAA;AArCY,uBAAe,kBAqC3B,CAAA","file":"services/AuthServiceImpl.js","sourcesContent":["import { Injectable, Inject, EventEmitter } from \"@angular/core\";\n\nimport * as Cookies from \"js-cookie\";\n\nimport Context from \"carbonldp/Context\";\nimport Credentials from \"carbonldp/Auth/Credentials\";\n\nimport { AUTH_COOKIE, ContextToken } from \"./../boot\";\n\nimport * as AuthService from \"./AuthService\";\n\n@Injectable()\nexport class AuthServiceImpl implements AuthService.Class {\n\tprivate _loggedInEmitter:EventEmitter<any>;\n\tprivate _loggedOutEmitter:EventEmitter<any>;\n\tprivate _authChangedEmitter:EventEmitter<any>;\n\tprivate context:Context;\n\n\tget loggedInEmitter():EventEmitter<any> { return this._loggedInEmitter };\n\tget loggedOutEmitter():EventEmitter<any> { return this._loggedOutEmitter };\n\tget authChangedEmitter():EventEmitter<any> { return this._authChangedEmitter };\n\n\tconstructor( @Inject( ContextToken ) context:Context ) {\n\t\tthis.context = context;\n\t\tthis._loggedInEmitter = new EventEmitter<any>();\n\t\tthis._loggedOutEmitter = new EventEmitter<any>();\n\t\tthis._authChangedEmitter = new EventEmitter<any>();\n\n\t\tthis.loggedInEmitter.subscribe( ( value:any ) => this.authChangedEmitter.emit( value ) );\n\t\tthis.loggedOutEmitter.subscribe( ( value:any ) => this.authChangedEmitter.emit( value ) );\n\t}\n\n\tisAuthenticated():boolean {\n\t\treturn this.context.auth.isAuthenticated();\n\t}\n\n\tlogin( username:string, password:string, rememberMe:boolean ):Promise<any> {\n\t\treturn this.context.auth.authenticate( username, password ).then( ( credentials:Credentials ) => {\n\t\t\tif( rememberMe ) Cookies.set( AUTH_COOKIE, credentials );\n\t\t\tthis.loggedInEmitter.emit( null );\n\t\t\treturn credentials;\n\t\t});\n\t}\n\n\tlogout():void {\n\t\tCookies.remove( AUTH_COOKIE );\n\t\tthis.context.auth.clearAuthentication();\n\t\tthis.loggedOutEmitter.emit( null );\n\t}\n}\n"],"sourceRoot":"/source/"}