{"version":3,"sources":["services/AuthServiceImpl.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,qBAAmC,eAAe,CAAC,CAAA;AAEnD,IAAY,OAAO,WAAM,WAAW,CAAC,CAAA;AAKrC,qBAA0C,WAAW,CAAC,CAAA;AAKtD;IAGC,yBAAqC,OAAe;QACnD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;IAED,yCAAe,GAAf;QACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC5C,CAAC;IAED,+BAAK,GAAL,UAAO,QAAe,EAAE,QAAe,EAAE,UAAkB;QAC1D,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAE,QAAQ,EAAE,QAAQ,CAAE,CAAC,IAAI,CAAE,UAAE,WAAuB;YAC1F,EAAE,CAAA,CAAE,UAAW,CAAC;gBAAC,OAAO,CAAC,GAAG,CAAE,kBAAW,EAAE,WAAW,CAAE,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC;QACpB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,gCAAM,GAAN;QACC,OAAO,CAAC,MAAM,CAAE,kBAAW,CAAE,CAAC;QAC9B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAChD,CAAC;IAtBF;QAAC,iBAAU,EAAE;mBAIE,aAAM,CAAE,mBAAY,CAAE;;uBAJxB;IAuBb,sBAAC;AAAD,CAtBA,AAsBC,IAAA;AAtBY,uBAAe,kBAsB3B,CAAA","file":"services/AuthServiceImpl.js","sourcesContent":["import { Injectable, Inject } from \"angular2/core\";\n\nimport * as Cookies from \"js-cookie\";\n\nimport Context from \"carbonldp/Context\";\nimport Credentials from \"carbonldp/Auth/Credentials\";\n\nimport { AUTH_COOKIE, ContextToken } from \"./../boot\";\n\nimport * as AuthService from \"./AuthService\";\n\n@Injectable()\nexport class AuthServiceImpl implements AuthService.Class {\n\tprivate context:Context;\n\n\tconstructor( @Inject( ContextToken ) context:Context ) {\n\t\tthis.context = context;\n\t}\n\n\tisAuthenticated():boolean {\n\t\treturn this.context.auth.isAuthenticated();\n\t}\n\n\tlogin( username:string, password:string, rememberMe:boolean ):Promise<any> {\n\t\treturn this.context.auth.authenticate( username, password ).then( ( credentials:Credentials ) => {\n\t\t\tif( rememberMe ) Cookies.set( AUTH_COOKIE, credentials );\n\t\t\treturn credentials;\n\t\t});\n\t}\n\n\tlogout():void {\n\t\tCookies.remove( AUTH_COOKIE );\n\t\treturn this.context.auth.clearAuthentication();\n\t}\n}\n"],"sourceRoot":"/source/"}